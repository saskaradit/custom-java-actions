name: "Build Java Application"
description: "Github action to build java apps"
author: "Raditya Saskara"

inputs:
  java-version:  
    description: 'java version'
    default: '11'
  app-version:
    description: 'apps version'
    required: true
    default: '1'
  app-name:
    description: 'apps version'
    required: true
  docker-container:
    description: 'create a docker image'
    default: true
  gcloud-account:
    description: 'gcloud project'
    required: true


outputs:
  running:
    description: "Boolean value indicating if the action was running"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: "11"
        distribution: "adopt"
        cache: maven
    - run: mvn --batch-mode --update-snapshots verify
      shell: bash
    - run: mkdir ${{ inputs.app-name }} && cp target/*.jar ${{ inputs.app-name }}/${{ inputs.app-name }}x${{ inputs.app-version }}.jar
      shell: bash
    - run: echo ${{ inputs.app-name }}x${{ inputs.app-version }}
      shell: bash
    - run: |
        if echo ${{ inputs.docker-container }} | grep -c "true"
            then
              echo "FROM openjdk:11-jre-slim 
              COPY ${{ inputs.app-name }}/${{ inputs.app-name }}x${{ inputs.app-version }}.jar /usr/local/lib/ 
              EXPOSE 8080 
              ENTRYPOINT ["java","-jar","/usr/local/lib/${{ inputs.app-name }}x${{ inputs.app-version }}.jar"]" > Dockerfile
        fi
      shell: bash
    - run: |
        if echo ${{ inputs.docker-container }} | grep -c "true"
            then cat Dockerfile
        fi
      shell: bash
    
    # Push to GCR
    - name: Login to gcloud registry
      id: gcloud
      uses: elgohr/gcloud-login-action@master
      with:
        account_key: ${{ inputs.gcloud-account }}
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ inputs.app-name }}
        username: ${{ steps.gcloud.outputs.username }}
        password: ${{ steps.gcloud.outputs.password }}
        dockerfile: Dockerfile
        tags: ${{ inputs.app-version }}
        registry: asia.gcr.io/${{ steps.gcloud.outputs.project_id }}
