name: "Build Java Application Dockerless"
on:
  workflow_call:
    inputs:
      java-version:  
        description: 'java version'
        type: string
        default: '11'
      app-version:
        description: 'apps version'
        type: string
        required: true
        default: '1'
      app-name:
        description: 'apps version'
        type: string
        required: true
      xms:
        description: 'java xms'
        type: string
        default: "128m"
        required: true
      xmx:
        description: 'java xmx'
        default: "256m"
        type: string
        required: true
    secrets:
      host:
        required: true
      username:
        required: true
      key:
        required: true
      port:
        required: true
jobs:
  build_job:
    name: Build java
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: maven
      - run: mvn --batch-mode --update-snapshots verify
        shell: bash
      - run: mkdir ${{ inputs.app-name }} && cp target/*.jar ${{ inputs.app-name }}/${{ inputs.app-name }}x${{ inputs.app-version }}.jar
        shell: bash
      - run: echo ${{ inputs.app-name }}x${{ inputs.app-version }}
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: ${{ inputs.app-name }}
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "[Unit]
            Description=Manage Java service

            [Service]
            WorkingDirectory=/opt/prod
            ExecStart=/bin/java -Xms${{inputs.xms}} -Xmx${{inputs.xms}} -jar ${{ inputs.app-name }}x${{ inputs.app-version }}.jar
            User=jvmapps
            Type=simple
            Restart=on-failure
            RestartSec=10

            [Install]
            WantedBy=multi-user.target" > /etc/systemd/system/${{inputs.app-name}}.service
            systemctl daemon-reload && systemctl start ${{inputs.app-name}}.service